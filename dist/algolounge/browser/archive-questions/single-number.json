{
  "filename": "single-number",
  "title": "Single Number",
  "keywords": [
    "single",
    "number",
    "leetcode",
    "136",
    "given",
    "non",
    "empty",
    "array",
    "integers",
    "nums"
  ],
  "description": "<h2>Single Number</h2><p>Leetcode 136. Single Number</p><p></p><p>You are given a **non-empty** array of integers `nums`. Every integer appears twice except for one.</p><p></p><p>Return the integer that appears only once.</p><p></p><p>You must implement a solution with $O(n)$ runtime complexity and use only $O(1)$ extra space.</p><h3>Examples:</h3><ul><li>Input: nums = [3,2,3]<br><br>Output: 2</li><li>Input: nums = [7,6,6,7,8]<br><br>Output: 8</li></ul><h3>Constraints:</h3><ul><li> `1 <= nums.length <= 10000`</li><li> `-10000 <= nums[i] <= 10000`</li></ul>",
  "languages": {
    "python": {
      "template": "def singleNumber(nums):\n    ",
      "solution_text": "<h3>Single Number Solution</h3><p><strong>Algorithm:</strong> Use XOR operation to find the single number. XOR of two identical numbers is 0, XOR of any number with 0 is the number itself.</p><p><strong>Time Complexity:</strong> O(n) where n is the length of the array</p><p><strong>Space Complexity:</strong> O(1) constant extra space</p><p><strong>Key Insights:</strong></p><ul><li>XOR operation has commutative and associative properties</li><li>a XOR a = 0 for any integer a</li><li>a XOR 0 = a for any integer a</li><li>XOR all numbers - pairs cancel out, single number remains</li></ul>",
      "solution_code": "def singleNumber(nums):\n    result = 0\n    for num in nums:\n        result ^= num  # XOR operation\n    return result"
    },
    "javascript": {
      "template": "function singleNumber(nums) {\n  \n}",
      "solution_text": "<h3>Single Number Solution</h3><p><strong>Algorithm:</strong> Use XOR operation to find the single number. XOR of two identical numbers is 0, XOR of any number with 0 is the number itself.</p><p><strong>Time Complexity:</strong> O(n) where n is the length of the array</p><p><strong>Space Complexity:</strong> O(1) constant extra space</p><p><strong>Key Insights:</strong></p><ul><li>XOR operation has commutative and associative properties</li><li>a XOR a = 0 for any integer a</li><li>a XOR 0 = a for any integer a</li><li>XOR all numbers - pairs cancel out, single number remains</li></ul>",
      "solution_code": "function singleNumber(nums) {\n    let result = 0;\n    for (let num of nums) {\n        result ^= num;  // XOR operation\n    }\n    return result;\n}"
    },
    "typescript": {
      "template": "function singleNumber(nums: number[]): number {\n  \n}",
      "solution_text": "<h3>Single Number Solution</h3><p><strong>Algorithm:</strong> Use XOR operation to find the single number. XOR of two identical numbers is 0, XOR of any number with 0 is the number itself.</p><p><strong>Time Complexity:</strong> O(n) where n is the length of the array</p><p><strong>Space Complexity:</strong> O(1) constant extra space</p><p><strong>Key Insights:</strong></p><ul><li>XOR operation has commutative and associative properties</li><li>a XOR a = 0 for any integer a</li><li>a XOR 0 = a for any integer a</li><li>XOR all numbers - pairs cancel out, single number remains</li></ul>",
      "solution_code": "function singleNumber(nums: number[]): number {\n    let result = 0;\n    for (let num of nums) {\n        result ^= num;  // XOR operation\n    }\n    return result;\n}"
    },
    "java": {
      "template": "class Solution {\n    public int singleNumber(int[] nums) {\n        \n    }\n}",
      "solution_text": "<h3>Single Number Solution</h3><p><strong>Algorithm:</strong> Use XOR operation to find the single number. XOR of two identical numbers is 0, XOR of any number with 0 is the number itself.</p><p><strong>Time Complexity:</strong> O(n) where n is the length of the array</p><p><strong>Space Complexity:</strong> O(1) constant extra space</p><p><strong>Key Insights:</strong></p><ul><li>XOR operation has commutative and associative properties</li><li>a XOR a = 0 for any integer a</li><li>a XOR 0 = a for any integer a</li><li>XOR all numbers - pairs cancel out, single number remains</li></ul>",
      "solution_code": "class Solution {\n    public int singleNumber(int[] nums) {\n        int result = 0;\n        for (int num : nums) {\n            result ^= num;  // XOR operation\n        }\n        return result;\n    }\n}"
    }
  },
  "order_matters": false,
  "test_cases": [
    {
      "id": 1,
      "input": {
        "nums": [
          3,
          2,
          3
        ]
      },
      "output": 2
    },
    {
      "id": 2,
      "input": {
        "nums": [
          7,
          6,
          6,
          7,
          8
        ]
      },
      "output": 8
    }
  ]
}