{
  "filename": "coffee-sales-projection",
  "title": "HW19 - Coffee Sales Projection",
  "keywords": [
    "array",
    "math",
    "medium",
    "percentage",
    "calculation"
  ],
  "description": "<h2>HW19 - Coffee Sales Projection</h2><p>Calculate coffee sales forecast where varieties representing ≥5% of total sales get a 15% increase, while varieties <5% are discontinued (forecast = 0).</p><h3>Example:</h3><ul><li>Input: [100, 200, 10]<br>Output: [115, 230, 0]<br>Explanation:<br>- Total sales = 310<br>- 100/310 = 32.3% ≥ 5% → 100 × 1.15 = 115<br>- 200/310 = 64.5% ≥ 5% → 200 × 1.15 = 230<br>- 10/310 = 3.2% < 5% → 0 (discontinued)</li></ul><h3>Constraints:</h3><ul><li>All sales figures are positive integers</li><li>Return forecast as integer array</li></ul>",
  "entry_function": "forecastSales",
  "template": "def forecastSales(sales):\n  ",
  "solution_text": "<h3>Coffee Sales Projection</h3><p><strong>Algorithm:</strong></p><ol><li>Calculate total sales</li><li>For each variety, calculate percentage</li><li>If ≥5%: multiply by 1.15, else set to 0</li></ol><p><strong>Time Complexity:</strong> O(n) - iterate through sales</p><p><strong>Space Complexity:</strong> O(n) - result array</p>",
  "solution_code": "def forecastSales(sales):\n    total = sum(sales)\n    forecast = []\n    \n    for sale in sales:\n        percentage = (sale / total) * 100 if total > 0 else 0\n        if percentage >= 5:\n            forecast.append(int(sale * 1.15))\n        else:\n            forecast.append(0)\n    \n    return forecast",

  "prepare": "def prepare(test_case_input):\n    \"\"\"Prepare arguments for forecastSales function\"\"\"\n    return (test_case_input['sales'],)",

  "verify": "def verify(actual_output, expected_output):\n    \"\"\"Verify the forecast result\"\"\"\n    def list_to_string(lst):\n        return '[' + ', '.join(str(x) for x in lst) + ']'\n    \n    passed = actual_output == expected_output\n    return [passed, list_to_string(actual_output)]",

  "test_cases": [
    {
      "id": 1,
      "input": {
        "sales": [100, 200, 10]
      },
      "output": [115, 230, 0]
    },
    {
      "id": 2,
      "input": {
        "sales": [50, 50]
      },
      "output": [57, 57]
    },
    {
      "id": 3,
      "input": {
        "sales": [100]
      },
      "output": [115]
    },
    {
      "id": 4,
      "input": {
        "sales": [1000, 10, 20]
      },
      "output": [1150, 0, 0]
    },
    {
      "id": 5,
      "input": {
        "sales": [60, 60, 60, 60]
      },
      "output": [69, 69, 69, 69]
    }
  ]
}
