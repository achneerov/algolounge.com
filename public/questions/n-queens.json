{
  "index": 62,
  "filename": "n-queens",
  "title": "N-Queens",
  "keywords": [
    "n",
    "queens",
    "backtracking",
    "chessboard",
    "puzzle",
    "recursion",
    "constraint",
    "satisfaction",
    "leetcode"
  ],
  "description": "<h2>N-Queens</h2><p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard so that no two queens can attack each other.</p><p>A <strong>queen</strong> in a chessboard can attack horizontally, vertically, and diagonally.</p><p>Given an integer <code>n</code>, return all distinct solutions to the <strong>n-queens puzzle</strong>.</p><p>Each solution contains a unique board layout where the queen pieces are placed. <code>'Q'</code> indicates a queen and <code>'.'</code> indicates an empty space.</p><p>You may return the answer in <strong>any order</strong>.</p><h3>Examples:</h3><ul><li><strong>Input:</strong> n = 4<br><strong>Output:</strong> [[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"],[\"Q...\",\"..Q.\",\"...Q\",\".Q..\"]]<br><strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle.</li><li><strong>Input:</strong> n = 1<br><strong>Output:</strong> [[\"Q\"]]</li></ul><h3>Constraints:</h3><ul><li><code>1 &lt;= n &lt;= 9</code></li></ul>",
  "entry_function": "solveNQueens",
  "template": "def solveNQueens(n):\n    ",
  "solution_text": "<h3>N-Queens</h3><p><strong>Algorithm:</strong></p><ol><li>Use backtracking to place queens row by row</li><li>For each row, try placing queen in each column</li><li>Check if placement is valid (no conflicts with previous queens)</li><li>Track columns, diagonals, and anti-diagonals with sets</li><li>When all rows filled, add board configuration to results</li></ol><p><strong>Time Complexity:</strong> O(n!) - backtracking with pruning</p><p><strong>Space Complexity:</strong> O(n<sup>2</sup>) - board storage and recursion stack</p><p><strong>Key Insights:</strong></p><ul><li>Diagonal check: row - col is constant for each diagonal</li><li>Anti-diagonal check: row + col is constant for each anti-diagonal</li><li>Backtracking eliminates invalid branches early</li></ul>",
  "solution_code": "def solveNQueens(n):\n    def create_board(state):\n        board = []\n        for row in state:\n            board.append('.' * row + 'Q' + '.' * (n - row - 1))\n        return board\n    \n    def backtrack(row, diagonals, anti_diagonals, cols, state):\n        # Base case: all queens placed\n        if row == n:\n            result.append(create_board(state))\n            return\n        \n        for col in range(n):\n            curr_diagonal = row - col\n            curr_anti_diagonal = row + col\n            \n            # Check if placement is valid\n            if (col in cols or \n                curr_diagonal in diagonals or \n                curr_anti_diagonal in anti_diagonals):\n                continue\n            \n            # Place queen\n            cols.add(col)\n            diagonals.add(curr_diagonal)\n            anti_diagonals.add(curr_anti_diagonal)\n            state.append(col)\n            \n            # Recurse to next row\n            backtrack(row + 1, diagonals, anti_diagonals, cols, state)\n            \n            # Backtrack: remove queen\n            cols.remove(col)\n            diagonals.remove(curr_diagonal)\n            anti_diagonals.remove(curr_anti_diagonal)\n            state.pop()\n    \n    result = []\n    backtrack(0, set(), set(), set(), [])\n    return result",
  "prepare": "def prepare(test_case_input):\n    \"\"\"Prepare arguments for solveNQueens function\"\"\"\n    return (test_case_input['n'],)",
  "verify": "def verify(actual_output, expected_output):\n    \"\"\"Verify the n-queens result\"\"\"\n    def list_to_string(lst):\n        if not lst:\n            return '[]'\n        boards = []\n        for board in lst:\n            board_str = '[' + ', '.join('\"' + row + '\"' for row in board) + ']'\n            boards.append(board_str)\n        return '[' + ', '.join(boards) + ']'\n    \n    # Convert both to sets of tuples for comparison (order doesn't matter)\n    actual_set = set(tuple(board) for board in actual_output)\n    expected_set = set(tuple(board) for board in expected_output)\n    \n    # Check if actual output matches expected output\n    passed = actual_set == expected_set\n    output_str = list_to_string(actual_output)\n    \n    return [passed, output_str]",
  "test_cases": [
    {
      "id": 1,
      "input": {
        "n": 1
      },
      "output": [
        [
          "Q"
        ]
      ]
    },
    {
      "id": 2,
      "input": {
        "n": 2
      },
      "output": []
    },
    {
      "id": 3,
      "input": {
        "n": 3
      },
      "output": []
    },
    {
      "id": 4,
      "input": {
        "n": 4
      },
      "output": [
        [
          ".Q..",
          "...Q",
          "Q...",
          "..Q."
        ],
        [
          "..Q.",
          "Q...",
          "...Q",
          ".Q.."
        ]
      ]
    },
    {
      "id": 5,
      "input": {
        "n": 5
      },
      "output": [
        [
          "Q....",
          "..Q..",
          "....Q",
          ".Q...",
          "...Q."
        ],
        [
          "Q....",
          "...Q.",
          ".Q...",
          "....Q",
          "..Q.."
        ],
        [
          ".Q...",
          "...Q.",
          "Q....",
          "..Q..",
          "....Q"
        ],
        [
          ".Q...",
          "....Q",
          "..Q..",
          "Q....",
          "...Q."
        ],
        [
          "..Q..",
          "Q....",
          "...Q.",
          ".Q...",
          "....Q"
        ],
        [
          "..Q..",
          "....Q",
          ".Q...",
          "...Q.",
          "Q...."
        ],
        [
          "...Q.",
          "Q....",
          "..Q..",
          "....Q",
          ".Q..."
        ],
        [
          "...Q.",
          ".Q...",
          "....Q",
          "..Q..",
          "Q...."
        ],
        [
          "....Q",
          ".Q...",
          "...Q.",
          "Q....",
          "..Q.."
        ],
        [
          "....Q",
          "..Q..",
          "Q....",
          "...Q.",
          ".Q..."
        ]
      ]
    },
    {
      "id": 6,
      "input": {
        "n": 6
      },
      "output": [
        [
          ".Q....",
          "...Q..",
          ".....Q",
          "Q.....",
          "..Q...",
          "....Q."
        ],
        [
          "..Q...",
          ".....Q",
          ".Q....",
          "....Q.",
          "Q.....",
          "...Q.."
        ],
        [
          "...Q..",
          "Q.....",
          "....Q.",
          ".Q....",
          ".....Q",
          "..Q..."
        ],
        [
          "....Q.",
          "..Q...",
          "Q.....",
          ".....Q",
          "...Q..",
          ".Q...."
        ]
      ]
    },
    {
      "id": 7,
      "input": {
        "n": 7
      },
      "output": [
        [
          "Q......",
          "..Q....",
          "....Q..",
          "......Q",
          ".Q.....",
          "...Q...",
          ".....Q."
        ],
        [
          "Q......",
          "...Q...",
          "......Q",
          "..Q....",
          ".....Q.",
          ".Q.....",
          "....Q.."
        ],
        [
          "Q......",
          "....Q..",
          ".Q.....",
          ".....Q.",
          "..Q....",
          "......Q",
          "...Q..."
        ],
        [
          "Q......",
          ".....Q.",
          "...Q...",
          ".Q.....",
          "......Q",
          "....Q..",
          "..Q...."
        ],
        [
          ".Q.....",
          "...Q...",
          "Q......",
          "......Q",
          "....Q..",
          "..Q....",
          ".....Q."
        ],
        [
          ".Q.....",
          "...Q...",
          ".....Q.",
          "Q......",
          "..Q....",
          "....Q..",
          "......Q"
        ],
        [
          ".Q.....",
          "....Q..",
          "Q......",
          "...Q...",
          "......Q",
          "..Q....",
          ".....Q."
        ],
        [
          ".Q.....",
          "....Q..",
          "..Q....",
          "Q......",
          "......Q",
          "...Q...",
          ".....Q."
        ],
        [
          ".Q.....",
          "....Q..",
          "......Q",
          "...Q...",
          "Q......",
          "..Q....",
          ".....Q."
        ],
        [
          ".Q.....",
          ".....Q.",
          "..Q....",
          "......Q",
          "...Q...",
          "Q......",
          "....Q.."
        ],
        [
          ".Q.....",
          "......Q",
          "....Q..",
          "..Q....",
          "Q......",
          ".....Q.",
          "...Q..."
        ],
        [
          "..Q....",
          "Q......",
          ".....Q.",
          ".Q.....",
          "....Q..",
          "......Q",
          "...Q..."
        ],
        [
          "..Q....",
          "Q......",
          ".....Q.",
          "...Q...",
          ".Q.....",
          "......Q",
          "....Q.."
        ],
        [
          "..Q....",
          "....Q..",
          "......Q",
          ".Q.....",
          "...Q...",
          ".....Q.",
          "Q......"
        ],
        [
          "..Q....",
          ".....Q.",
          ".Q.....",
          "....Q..",
          "Q......",
          "...Q...",
          "......Q"
        ],
        [
          "..Q....",
          "......Q",
          ".Q.....",
          "...Q...",
          ".....Q.",
          "Q......",
          "....Q.."
        ],
        [
          "..Q....",
          "......Q",
          "...Q...",
          "Q......",
          "....Q..",
          ".Q.....",
          ".....Q."
        ],
        [
          "...Q...",
          "Q......",
          "..Q....",
          ".....Q.",
          ".Q.....",
          "......Q",
          "....Q.."
        ],
        [
          "...Q...",
          "Q......",
          "....Q..",
          ".Q.....",
          ".....Q.",
          "..Q....",
          "......Q"
        ],
        [
          "...Q...",
          ".Q.....",
          "......Q",
          "....Q..",
          "..Q....",
          "Q......",
          ".....Q."
        ],
        [
          "...Q...",
          ".....Q.",
          "Q......",
          "..Q....",
          "....Q..",
          "......Q",
          ".Q....."
        ],
        [
          "...Q...",
          "......Q",
          "..Q....",
          ".....Q.",
          ".Q.....",
          "....Q..",
          "Q......"
        ],
        [
          "...Q...",
          "......Q",
          "....Q..",
          ".Q.....",
          ".....Q.",
          "Q......",
          "..Q...."
        ],
        [
          "....Q..",
          "Q......",
          "...Q...",
          "......Q",
          "..Q....",
          ".....Q.",
          ".Q....."
        ],
        [
          "....Q..",
          "Q......",
          ".....Q.",
          "...Q...",
          ".Q.....",
          "......Q",
          "..Q...."
        ],
        [
          "....Q..",
          ".Q.....",
          ".....Q.",
          "..Q....",
          "......Q",
          "...Q...",
          "Q......"
        ],
        [
          "....Q..",
          "..Q....",
          "Q......",
          ".....Q.",
          "...Q...",
          ".Q.....",
          "......Q"
        ],
        [
          "....Q..",
          "......Q",
          ".Q.....",
          "...Q...",
          ".....Q.",
          "Q......",
          "..Q...."
        ],
        [
          "....Q..",
          "......Q",
          ".Q.....",
          ".....Q.",
          "..Q....",
          "Q......",
          "...Q..."
        ],
        [
          ".....Q.",
          "Q......",
          "..Q....",
          "....Q..",
          "......Q",
          ".Q.....",
          "...Q..."
        ],
        [
          ".....Q.",
          ".Q.....",
          "....Q..",
          "Q......",
          "...Q...",
          "......Q",
          "..Q...."
        ],
        [
          ".....Q.",
          "..Q....",
          "Q......",
          "...Q...",
          "......Q",
          "....Q..",
          ".Q....."
        ],
        [
          ".....Q.",
          "..Q....",
          "....Q..",
          "......Q",
          "Q......",
          "...Q...",
          ".Q....."
        ],
        [
          ".....Q.",
          "..Q....",
          "......Q",
          "...Q...",
          "Q......",
          "....Q..",
          ".Q....."
        ],
        [
          ".....Q.",
          "...Q...",
          ".Q.....",
          "......Q",
          "....Q..",
          "..Q....",
          "Q......"
        ],
        [
          ".....Q.",
          "...Q...",
          "......Q",
          "Q......",
          "..Q....",
          "....Q..",
          ".Q....."
        ],
        [
          "......Q",
          ".Q.....",
          "...Q...",
          ".....Q.",
          "Q......",
          "..Q....",
          "....Q.."
        ],
        [
          "......Q",
          "..Q....",
          ".....Q.",
          ".Q.....",
          "....Q..",
          "Q......",
          "...Q..."
        ],
        [
          "......Q",
          "...Q...",
          "Q......",
          "....Q..",
          ".Q.....",
          ".....Q.",
          "..Q...."
        ],
        [
          "......Q",
          "....Q..",
          "..Q....",
          "Q......",
          ".....Q.",
          "...Q...",
          ".Q....."
        ]
      ]
    },
    {
      "id": 8,
      "input": {
        "n": 8
      },
      "output": [
        [
          "Q.......",
          "....Q...",
          ".......Q",
          ".....Q..",
          "..Q.....",
          "......Q.",
          ".Q......",
          "...Q...."
        ],
        [
          "Q.......",
          ".....Q..",
          ".......Q",
          "..Q.....",
          "......Q.",
          "...Q....",
          ".Q......",
          "....Q..."
        ],
        [
          "Q.......",
          "......Q.",
          "...Q....",
          ".....Q..",
          ".......Q",
          ".Q......",
          "....Q...",
          "..Q....."
        ],
        [
          "Q.......",
          "......Q.",
          "....Q...",
          ".......Q",
          ".Q......",
          "...Q....",
          ".....Q..",
          "..Q....."
        ],
        [
          ".Q......",
          "...Q....",
          ".....Q..",
          ".......Q",
          "..Q.....",
          "Q.......",
          "......Q.",
          "....Q..."
        ],
        [
          ".Q......",
          "....Q...",
          "......Q.",
          "Q.......",
          "..Q.....",
          ".......Q",
          ".....Q..",
          "...Q...."
        ],
        [
          ".Q......",
          "....Q...",
          "......Q.",
          "...Q....",
          "Q.......",
          ".......Q",
          ".....Q..",
          "..Q....."
        ],
        [
          ".Q......",
          ".....Q..",
          "Q.......",
          "......Q.",
          "...Q....",
          ".......Q",
          "..Q.....",
          "....Q..."
        ],
        [
          ".Q......",
          ".....Q..",
          ".......Q",
          "..Q.....",
          "Q.......",
          "...Q....",
          "......Q.",
          "....Q..."
        ],
        [
          ".Q......",
          "......Q.",
          "..Q.....",
          ".....Q..",
          ".......Q",
          "....Q...",
          "Q.......",
          "...Q...."
        ],
        [
          ".Q......",
          "......Q.",
          "....Q...",
          ".......Q",
          "Q.......",
          "...Q....",
          ".....Q..",
          "..Q....."
        ],
        [
          ".Q......",
          ".......Q",
          ".....Q..",
          "Q.......",
          "..Q.....",
          "....Q...",
          "......Q.",
          "...Q...."
        ],
        [
          "..Q.....",
          "Q.......",
          "......Q.",
          "....Q...",
          ".......Q",
          ".Q......",
          "...Q....",
          ".....Q.."
        ],
        [
          "..Q.....",
          "....Q...",
          ".Q......",
          ".......Q",
          "Q.......",
          "......Q.",
          "...Q....",
          ".....Q.."
        ],
        [
          "..Q.....",
          "....Q...",
          ".Q......",
          ".......Q",
          ".....Q..",
          "...Q....",
          "......Q.",
          "Q......."
        ],
        [
          "..Q.....",
          "....Q...",
          "......Q.",
          "Q.......",
          "...Q....",
          ".Q......",
          ".......Q",
          ".....Q.."
        ],
        [
          "..Q.....",
          "....Q...",
          ".......Q",
          "...Q....",
          "Q.......",
          "......Q.",
          ".Q......",
          ".....Q.."
        ],
        [
          "..Q.....",
          ".....Q..",
          ".Q......",
          "....Q...",
          ".......Q",
          "Q.......",
          "......Q.",
          "...Q...."
        ],
        [
          "..Q.....",
          ".....Q..",
          ".Q......",
          "......Q.",
          "Q.......",
          "...Q....",
          ".......Q",
          "....Q..."
        ],
        [
          "..Q.....",
          ".....Q..",
          ".Q......",
          "......Q.",
          "....Q...",
          "Q.......",
          ".......Q",
          "...Q...."
        ],
        [
          "..Q.....",
          ".....Q..",
          "...Q....",
          "Q.......",
          ".......Q",
          "....Q...",
          "......Q.",
          ".Q......"
        ],
        [
          "..Q.....",
          ".....Q..",
          "...Q....",
          ".Q......",
          ".......Q",
          "....Q...",
          "......Q.",
          "Q......."
        ],
        [
          "..Q.....",
          ".....Q..",
          ".......Q",
          "Q.......",
          "...Q....",
          "......Q.",
          "....Q...",
          ".Q......"
        ],
        [
          "..Q.....",
          ".....Q..",
          ".......Q",
          "Q.......",
          "....Q...",
          "......Q.",
          ".Q......",
          "...Q...."
        ],
        [
          "..Q.....",
          ".....Q..",
          ".......Q",
          ".Q......",
          "...Q....",
          "Q.......",
          "......Q.",
          "....Q..."
        ],
        [
          "..Q.....",
          "......Q.",
          ".Q......",
          ".......Q",
          "....Q...",
          "Q.......",
          "...Q....",
          ".....Q.."
        ],
        [
          "..Q.....",
          "......Q.",
          ".Q......",
          ".......Q",
          ".....Q..",
          "...Q....",
          "Q.......",
          "....Q..."
        ],
        [
          "..Q.....",
          ".......Q",
          "...Q....",
          "......Q.",
          "Q.......",
          ".....Q..",
          ".Q......",
          "....Q..."
        ],
        [
          "...Q....",
          "Q.......",
          "....Q...",
          ".......Q",
          ".Q......",
          "......Q.",
          "..Q.....",
          ".....Q.."
        ],
        [
          "...Q....",
          "Q.......",
          "....Q...",
          ".......Q",
          ".....Q..",
          "..Q.....",
          "......Q.",
          ".Q......"
        ],
        [
          "...Q....",
          ".Q......",
          "....Q...",
          ".......Q",
          ".....Q..",
          "Q.......",
          "..Q.....",
          "......Q."
        ],
        [
          "...Q....",
          ".Q......",
          "......Q.",
          "..Q.....",
          ".....Q..",
          ".......Q",
          "Q.......",
          "....Q..."
        ],
        [
          "...Q....",
          ".Q......",
          "......Q.",
          "..Q.....",
          ".....Q..",
          ".......Q",
          "....Q...",
          "Q......."
        ],
        [
          "...Q....",
          ".Q......",
          "......Q.",
          "....Q...",
          "Q.......",
          ".......Q",
          ".....Q..",
          "..Q....."
        ],
        [
          "...Q....",
          ".Q......",
          ".......Q",
          "....Q...",
          "......Q.",
          "Q.......",
          "..Q.....",
          ".....Q.."
        ],
        [
          "...Q....",
          ".Q......",
          ".......Q",
          ".....Q..",
          "Q.......",
          "..Q.....",
          "....Q...",
          "......Q."
        ],
        [
          "...Q....",
          ".....Q..",
          "Q.......",
          "....Q...",
          ".Q......",
          ".......Q",
          "..Q.....",
          "......Q."
        ],
        [
          "...Q....",
          ".....Q..",
          ".......Q",
          ".Q......",
          "......Q.",
          "Q.......",
          "..Q.....",
          "....Q..."
        ],
        [
          "...Q....",
          ".....Q..",
          ".......Q",
          "..Q.....",
          "Q.......",
          "......Q.",
          "....Q...",
          ".Q......"
        ],
        [
          "...Q....",
          "......Q.",
          "Q.......",
          ".......Q",
          "....Q...",
          ".Q......",
          ".....Q..",
          "..Q....."
        ],
        [
          "...Q....",
          "......Q.",
          "..Q.....",
          ".......Q",
          ".Q......",
          "....Q...",
          "Q.......",
          ".....Q.."
        ],
        [
          "...Q....",
          "......Q.",
          "....Q...",
          ".Q......",
          ".....Q..",
          "Q.......",
          "..Q.....",
          ".......Q"
        ],
        [
          "...Q....",
          "......Q.",
          "....Q...",
          "..Q.....",
          "Q.......",
          ".....Q..",
          ".......Q",
          ".Q......"
        ],
        [
          "...Q....",
          ".......Q",
          "Q.......",
          "..Q.....",
          ".....Q..",
          ".Q......",
          "......Q.",
          "....Q..."
        ],
        [
          "...Q....",
          ".......Q",
          "Q.......",
          "....Q...",
          "......Q.",
          ".Q......",
          ".....Q..",
          "..Q....."
        ],
        [
          "...Q....",
          ".......Q",
          "....Q...",
          "..Q.....",
          "Q.......",
          "......Q.",
          ".Q......",
          ".....Q.."
        ],
        [
          "....Q...",
          "Q.......",
          "...Q....",
          ".....Q..",
          ".......Q",
          ".Q......",
          "......Q.",
          "..Q....."
        ],
        [
          "....Q...",
          "Q.......",
          ".......Q",
          "...Q....",
          ".Q......",
          "......Q.",
          "..Q.....",
          ".....Q.."
        ],
        [
          "....Q...",
          "Q.......",
          ".......Q",
          ".....Q..",
          "..Q.....",
          "......Q.",
          ".Q......",
          "...Q...."
        ],
        [
          "....Q...",
          ".Q......",
          "...Q....",
          ".....Q..",
          ".......Q",
          "..Q.....",
          "Q.......",
          "......Q."
        ],
        [
          "....Q...",
          ".Q......",
          "...Q....",
          "......Q.",
          "..Q.....",
          ".......Q",
          ".....Q..",
          "Q......."
        ],
        [
          "....Q...",
          ".Q......",
          ".....Q..",
          "Q.......",
          "......Q.",
          "...Q....",
          ".......Q",
          "..Q....."
        ],
        [
          "....Q...",
          ".Q......",
          ".......Q",
          "Q.......",
          "...Q....",
          "......Q.",
          "..Q.....",
          ".....Q.."
        ],
        [
          "....Q...",
          "..Q.....",
          "Q.......",
          ".....Q..",
          ".......Q",
          ".Q......",
          "...Q....",
          "......Q."
        ],
        [
          "....Q...",
          "..Q.....",
          "Q.......",
          "......Q.",
          ".Q......",
          ".......Q",
          ".....Q..",
          "...Q...."
        ],
        [
          "....Q...",
          "..Q.....",
          ".......Q",
          "...Q....",
          "......Q.",
          "Q.......",
          ".....Q..",
          ".Q......"
        ],
        [
          "....Q...",
          "......Q.",
          "Q.......",
          "..Q.....",
          ".......Q",
          ".....Q..",
          "...Q....",
          ".Q......"
        ],
        [
          "....Q...",
          "......Q.",
          "Q.......",
          "...Q....",
          ".Q......",
          ".......Q",
          ".....Q..",
          "..Q....."
        ],
        [
          "....Q...",
          "......Q.",
          ".Q......",
          "...Q....",
          ".......Q",
          "Q.......",
          "..Q.....",
          ".....Q.."
        ],
        [
          "....Q...",
          "......Q.",
          ".Q......",
          ".....Q..",
          "..Q.....",
          "Q.......",
          "...Q....",
          ".......Q"
        ],
        [
          "....Q...",
          "......Q.",
          ".Q......",
          ".....Q..",
          "..Q.....",
          "Q.......",
          ".......Q",
          "...Q...."
        ],
        [
          "....Q...",
          "......Q.",
          "...Q....",
          "Q.......",
          "..Q.....",
          ".......Q",
          ".....Q..",
          ".Q......"
        ],
        [
          "....Q...",
          ".......Q",
          "...Q....",
          "Q.......",
          "..Q.....",
          ".....Q..",
          ".Q......",
          "......Q."
        ],
        [
          "....Q...",
          ".......Q",
          "...Q....",
          "Q.......",
          "......Q.",
          ".Q......",
          ".....Q..",
          "..Q....."
        ],
        [
          ".....Q..",
          "Q.......",
          "....Q...",
          ".Q......",
          ".......Q",
          "..Q.....",
          "......Q.",
          "...Q...."
        ],
        [
          ".....Q..",
          ".Q......",
          "......Q.",
          "Q.......",
          "..Q.....",
          "....Q...",
          ".......Q",
          "...Q...."
        ],
        [
          ".....Q..",
          ".Q......",
          "......Q.",
          "Q.......",
          "...Q....",
          ".......Q",
          "....Q...",
          "..Q....."
        ],
        [
          ".....Q..",
          "..Q.....",
          "Q.......",
          "......Q.",
          "....Q...",
          ".......Q",
          ".Q......",
          "...Q...."
        ],
        [
          ".....Q..",
          "..Q.....",
          "Q.......",
          ".......Q",
          "...Q....",
          ".Q......",
          "......Q.",
          "....Q..."
        ],
        [
          ".....Q..",
          "..Q.....",
          "Q.......",
          ".......Q",
          "....Q...",
          ".Q......",
          "...Q....",
          "......Q."
        ],
        [
          ".....Q..",
          "..Q.....",
          "....Q...",
          "......Q.",
          "Q.......",
          "...Q....",
          ".Q......",
          ".......Q"
        ],
        [
          ".....Q..",
          "..Q.....",
          "....Q...",
          ".......Q",
          "Q.......",
          "...Q....",
          ".Q......",
          "......Q."
        ],
        [
          ".....Q..",
          "..Q.....",
          "......Q.",
          ".Q......",
          "...Q....",
          ".......Q",
          "Q.......",
          "....Q..."
        ],
        [
          ".....Q..",
          "..Q.....",
          "......Q.",
          ".Q......",
          ".......Q",
          "....Q...",
          "Q.......",
          "...Q...."
        ],
        [
          ".....Q..",
          "..Q.....",
          "......Q.",
          "...Q....",
          "Q.......",
          ".......Q",
          ".Q......",
          "....Q..."
        ],
        [
          ".....Q..",
          "...Q....",
          "Q.......",
          "....Q...",
          ".......Q",
          ".Q......",
          "......Q.",
          "..Q....."
        ],
        [
          ".....Q..",
          "...Q....",
          ".Q......",
          ".......Q",
          "....Q...",
          "......Q.",
          "Q.......",
          "..Q....."
        ],
        [
          ".....Q..",
          "...Q....",
          "......Q.",
          "Q.......",
          "..Q.....",
          "....Q...",
          ".Q......",
          ".......Q"
        ],
        [
          ".....Q..",
          "...Q....",
          "......Q.",
          "Q.......",
          ".......Q",
          ".Q......",
          "....Q...",
          "..Q....."
        ],
        [
          ".....Q..",
          ".......Q",
          ".Q......",
          "...Q....",
          "Q.......",
          "......Q.",
          "....Q...",
          "..Q....."
        ],
        [
          "......Q.",
          "Q.......",
          "..Q.....",
          ".......Q",
          ".....Q..",
          "...Q....",
          ".Q......",
          "....Q..."
        ],
        [
          "......Q.",
          ".Q......",
          "...Q....",
          "Q.......",
          ".......Q",
          "....Q...",
          "..Q.....",
          ".....Q.."
        ],
        [
          "......Q.",
          ".Q......",
          ".....Q..",
          "..Q.....",
          "Q.......",
          "...Q....",
          ".......Q",
          "....Q..."
        ],
        [
          "......Q.",
          "..Q.....",
          "Q.......",
          ".....Q..",
          ".......Q",
          "....Q...",
          ".Q......",
          "...Q...."
        ],
        [
          "......Q.",
          "..Q.....",
          ".......Q",
          ".Q......",
          "....Q...",
          "Q.......",
          ".....Q..",
          "...Q...."
        ],
        [
          "......Q.",
          "...Q....",
          ".Q......",
          "....Q...",
          ".......Q",
          "Q.......",
          "..Q.....",
          ".....Q.."
        ],
        [
          "......Q.",
          "...Q....",
          ".Q......",
          ".......Q",
          ".....Q..",
          "Q.......",
          "..Q.....",
          "....Q..."
        ],
        [
          "......Q.",
          "....Q...",
          "..Q.....",
          "Q.......",
          ".....Q..",
          ".......Q",
          ".Q......",
          "...Q...."
        ],
        [
          ".......Q",
          ".Q......",
          "...Q....",
          "Q.......",
          "......Q.",
          "....Q...",
          "..Q.....",
          ".....Q.."
        ],
        [
          ".......Q",
          ".Q......",
          "....Q...",
          "..Q.....",
          "Q.......",
          "......Q.",
          "...Q....",
          ".....Q.."
        ],
        [
          ".......Q",
          "..Q.....",
          "Q.......",
          ".....Q..",
          ".Q......",
          "....Q...",
          "......Q.",
          "...Q...."
        ],
        [
          ".......Q",
          "...Q....",
          "Q.......",
          "..Q.....",
          ".....Q..",
          ".Q......",
          "......Q.",
          "....Q..."
        ]
      ]
    }
  ]
}
