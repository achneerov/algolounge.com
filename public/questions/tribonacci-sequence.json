{
  "filename": "tribonacci-sequence",
  "title": "Tribonacci Sequence",
  "keywords": [
    "dynamic",
    "programming",
    "recursion",
    "fibonacci",
    "sequence",
    "medium"
  ],
  "description": "<h2>Tribonacci Sequence</h2><p>Calculate the nth tribonacci number where each number is the sum of the three preceding numbers.</p><p><strong>Definition:</strong></p><ul><li>T(0) = 0</li><li>T(1) = 1</li><li>T(2) = 1</li><li>T(n) = T(n-1) + T(n-2) + T(n-3) for n ≥ 3</li></ul><h3>Example:</h3><ul><li>T(0) = 0</li><li>T(1) = 1</li><li>T(2) = 1</li><li>T(3) = T(2) + T(1) + T(0) = 1 + 1 + 0 = 2</li><li>T(4) = T(3) + T(2) + T(1) = 2 + 1 + 1 = 4</li><li>T(5) = T(4) + T(3) + T(2) = 4 + 2 + 1 = 7</li></ul><h3>Constraints:</h3><ul><li>0 ≤ n ≤ 37</li><li>Handle base cases n = 0, 1, 2</li></ul>",
  "entry_function": "tribonacci",
  "template": "def tribonacci(n):\n  ",
  "solution_text": "<h3>Tribonacci Sequence</h3><p><strong>Algorithm:</strong></p><ol><li>Handle base cases</li><li>Use iterative approach with three variables</li><li>Update values: a, b, c = b, c, a + b + c</li></ol><p><strong>Time Complexity:</strong> O(n) - iterate n times</p><p><strong>Space Complexity:</strong> O(1) - constant space</p>",
  "solution_code": "def tribonacci(n):\n    if n == 0:\n        return 0\n    if n == 1 or n == 2:\n        return 1\n    \n    a, b, c = 0, 1, 1\n    for _ in range(3, n + 1):\n        a, b, c = b, c, a + b + c\n    \n    return c",
  "prepare": "def prepare(test_case_input):\n    \"\"\"Prepare arguments for tribonacci function\"\"\"\n    return (test_case_input['n'],)",
  "verify": "def verify(actual_output, expected_output):\n    \"\"\"Verify the tribonacci result\"\"\"\n    passed = actual_output == expected_output\n    return [passed, str(actual_output)]",
  "test_cases": [
    {
      "id": 1,
      "input": {
        "n": 0
      },
      "output": 0
    },
    {
      "id": 2,
      "input": {
        "n": 1
      },
      "output": 1
    },
    {
      "id": 3,
      "input": {
        "n": 2
      },
      "output": 1
    },
    {
      "id": 4,
      "input": {
        "n": 3
      },
      "output": 2
    },
    {
      "id": 5,
      "input": {
        "n": 4
      },
      "output": 4
    },
    {
      "id": 6,
      "input": {
        "n": 5
      },
      "output": 7
    },
    {
      "id": 7,
      "input": {
        "n": 10
      },
      "output": 149
    },
    {
      "id": 8,
      "input": {
        "n": 6
      },
      "output": 13
    },
    {
      "id": 9,
      "input": {
        "n": 7
      },
      "output": 24
    },
    {
      "id": 10,
      "input": {
        "n": 15
      },
      "output": 3136
    }
  ]
}
