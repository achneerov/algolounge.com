#!/bin/bash

set -e

# Check for -prod flag
ENVIRONMENT="development"
if [[ "$1" == "-prod" ]]; then
  ENVIRONMENT="production"
fi

echo "=== AlgoLounge Setup ==="
echo "Environment: $ENVIRONMENT"
echo ""

# Git pull
echo "Pulling latest changes..."
git pull

echo ""
echo "Installing frontend dependencies..."
cd frontend
npm install
cd ..

echo ""
echo "Installing backend dependencies..."
cd backend
npm install
cd ..

echo ""
echo "Setting up database..."
cd backend
rm -f *.db *.db-shm *.db-wal
npx drizzle-kit generate --config=./drizzle.config.ts
npx drizzle-kit migrate --config=./drizzle.config.ts
cd ..

echo ""
echo "Setting up environment configuration..."

# Create frontend environment file
mkdir -p frontend/src/environments
if [[ "$ENVIRONMENT" == "production" ]]; then
  cat > frontend/src/environments/environment.ts << 'EOF'
export const environment = {
  production: true,
  apiUrl: ''
};
EOF
  ENV_FILE="backend/.env.local"
  echo "NODE_ENV=production" > "$ENV_FILE"
else
  cat > frontend/src/environments/environment.ts << 'EOF'
export const environment = {
  production: false,
  apiUrl: 'http://localhost:3000'
};
EOF
  ENV_FILE="backend/.env.local"
  echo "NODE_ENV=development" > "$ENV_FILE"
fi

# Generate JWT_SECRET if not already set
if ! grep -q "JWT_SECRET" "$ENV_FILE"; then
  JWT_SECRET=$(openssl rand -base64 32)
  echo "JWT_SECRET=$JWT_SECRET" >> "$ENV_FILE"
fi

echo ""
echo "=== Setup Complete ==="
echo "Environment: $ENVIRONMENT"
echo "Run './start' to start development servers"
