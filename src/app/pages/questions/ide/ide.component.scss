@use '../../../../styles/variables' as *;

:host {
  display: block;
  height: 100%;
  width: 100%;
  overflow: hidden;
  background: var(--color-bg-primary);
  border-radius: $radius-lg;
  box-shadow: $shadow-sm;
  border: 1px solid var(--color-border);
}

.ide-wrapper {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
}

.taskbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: $spacing-sm $spacing-md;
  background: var(--color-bg-secondary);
  border-bottom: 1px solid var(--color-border);
  height: 56px;
  box-sizing: border-box;
}

.taskbar-left,
.taskbar-right {
  display: flex;
  align-items: center;
}

.taskbar-left {
  margin-right: 8px;
}

.taskbar-right {
  margin-left: $spacing-sm;
  display: flex;
  gap: $spacing-sm;
}

.language-dropdown {
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 3px;
  padding: 2px 4px;
  margin: 0 6px;
  font-size: 0.8rem;
  background: transparent;
  outline: none;
  
  &:focus {
    border-color: rgba(0, 0, 0, 0.3);
  }
}

.reset-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: 2px solid var(--color-border);
  border-radius: $radius-md;
  width: 40px;
  height: 40px;
  cursor: pointer;
  color: var(--color-text-secondary);
  transition: all $transition-base;
  padding: 0;

  &:hover {
    background: var(--color-bg-primary);
    border-color: var(--color-primary);
    color: var(--color-primary);
    transform: translateY(-2px);
    box-shadow: $shadow-md;
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }

  .reset-icon {
    width: 20px;
    height: 20px;
    transition: transform $transition-base;
  }

  &:hover .reset-icon {
    transform: rotate(360deg);
  }
}

.run-btn {
  background: var(--color-primary);
  border: 2px solid var(--color-primary);
  color: white;
  font-size: $font-size-sm;
  font-weight: 600;
  padding: $spacing-sm $spacing-md;
  border-radius: $radius-md;
  cursor: pointer;
  outline: none;
  display: flex;
  align-items: center;
  gap: $spacing-sm;
  transition: all $transition-base;

  svg {
    width: 14px;
    height: 14px;
    fill: currentColor;
    stroke: none;
  }

  span {
    line-height: 1;
  }

  &:enabled:hover {
    background: var(--color-primary-dark);
    border-color: var(--color-primary-dark);
    box-shadow: $shadow-md;
    transform: translateY(-2px);
  }

  &:disabled {
    opacity: 0.5;
    background: var(--color-text-secondary);
    border-color: var(--color-text-secondary);
    color: white;
    cursor: not-allowed;
    box-shadow: none;
  }

  &:focus {
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);
  }

  &:active:not(:disabled) {
    background: var(--color-primary-dark);
    border-color: var(--color-primary-dark);
    transform: translateY(0);
    box-shadow: $shadow-sm;
  }
}

.editor-container {
  flex: 1;
  width: 100%;
  overflow: auto;

  // CodeMirror editor styling
  ::ng-deep .cm-editor {
    outline: none !important;
    height: 100%;
  }

  // Ensure proper background colors
  ::ng-deep .cm-scroller {
    overflow: auto;
  }
}
